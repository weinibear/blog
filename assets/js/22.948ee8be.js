(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{294:function(e,v,_){e.exports=_.p+"assets/img/what_is_devDependencies.a5d9b55b.png"},329:function(e,v,_){"use strict";_.r(v);var c=_(14),a=Object(c.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"dependencies-和-devdependencies"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dependencies-和-devdependencies"}},[e._v("#")]),e._v(" dependencies 和 devDependencies")]),e._v(" "),v("h4",{attrs:{id:"are-you-kidding-me"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#are-you-kidding-me"}},[e._v("#")]),e._v(" Are you kidding me")]),e._v(" "),v("p",[e._v("网上搜索了很多解释，有很多说法是，"),v("code",[e._v("dependencies")]),e._v("是生产环境所需要的包，而"),v("code",[e._v("devDependencies")]),e._v("是开发环境所需要的包，很多朋友看后就觉得，那么 build 时，"),v("code",[e._v("devDependencies")]),e._v("中的包就不会被打包进生产环境产物。我想说的是，打包进哪些依赖是由你的打包器，像"),v("code",[e._v("webpack")]),e._v("等工具决定，跟"),v("code",[e._v("npm")]),e._v("没啥关系。")]),e._v(" "),v("h4",{attrs:{id:"事实是"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事实是"}},[e._v("#")]),e._v(" 事实是")]),e._v(" "),v("p",[e._v("正确解释是，我们新建一个项目，然后"),v("code",[e._v("npm init")]),e._v("生成一个"),v("code",[e._v("package.json")]),e._v("，可以看作是开发一个 module，那么我们开发的模块将来可能是会发布到"),v("code",[e._v("npm")]),e._v("仓库供别人使用，也可能只是自己使用不会发布。那么如果是会发布到"),v("code",[e._v("npm")]),e._v("上，当别人"),v("code",[e._v("npm install")]),e._v("安装你的包时，就还会安装你的模块中"),v("code",[e._v("package.json")]),e._v("中"),v("code",[e._v("dependencies")]),e._v("依赖的包，而"),v("code",[e._v("devDependencies")]),e._v("中的依赖，你的包使用者就不会安装。请看来自"),v("code",[e._v("npm")]),e._v("官网对"),v("code",[e._v("devDependencies")]),e._v("的解释：")]),e._v(" "),v("p",[v("img",{attrs:{src:_(294),alt:""}})]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),v("p",[e._v("总的来说，开发时，像公司一般非公共模块项目，并不会发布供其它人引用，那么实际上，你将依赖写在"),v("code",[e._v("dependencies")]),e._v("和"),v("code",[e._v("devDependencies")]),e._v("中并没有太大区别。(另外在"),v("code",[e._v("npm install")]),e._v("时加入--production 有区别，此时也不会下载"),v("code",[e._v("devDependencies")]),e._v("的依赖。前提是保证这里边的依赖不影响项目打包部署，也只有 eslint、prettier 这种才是完全不影响的了）")])]),e._v(" "),v("h4",{attrs:{id:"应该怎么做"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#应该怎么做"}},[e._v("#")]),e._v(" 应该怎么做")]),e._v(" "),v("p",[e._v("对于自己要发布上线的项目，"),v("code",[e._v("eslint")]),e._v("、"),v("code",[e._v("prettier")]),e._v("以及"),v("code",[e._v("ts的type")]),e._v("等等这些发布完全用不到的可以放到"),v("code",[e._v("devDependencies")]),e._v("下，然后上线打包部署的时候可以用"),v("code",[e._v("npm install --production")]),e._v("可以减少一些依赖安装时间；如果是要发布到 npm 仓库的第三方模块，不影响本模块功能的都可以放到"),v("code",[e._v("devDependencies")]),e._v("下，这样别人在引用的模块时也不会安装这些模块，减少冲突。例如这时候被引入模块的"),v("code",[e._v("webpack")]),e._v("、"),v("code",[e._v("babel")]),e._v("依赖这时候对于引入方可能就不是必须的。")]),e._v(" "),v("h2",{attrs:{id:"package-json-和-package-lock-json"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#package-json-和-package-lock-json"}},[e._v("#")]),e._v(" package.json 和 package.lock.json")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/post/7078233610683170824",target:"_blank",rel:"noopener noreferrer"}},[e._v("文章参考"),v("OutboundLink")],1),e._v("。")]),e._v(" "),v("h4",{attrs:{id:"版本号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#版本号"}},[e._v("#")]),e._v(" 版本号")]),e._v(" "),v("p",[e._v("版本号由三部分组成：major.minor.patch，主版本号.次版本号.修补版本号。")]),e._v(" "),v("h4",{attrs:{id:"安装依赖包版本"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖包版本"}},[e._v("#")]),e._v(" 安装依赖包版本")]),e._v(" "),v("p",[v("code",[e._v("~")]),e._v(" 会匹配最近的小版本依赖包，比如 ~1.2.3 会匹配所有 1.2.x 版本，但是不包括 1.3.0。"),v("br"),e._v(" "),v("code",[e._v("^")]),e._v(" 会匹配最新的大版本依赖包，比如 ^1.2.3 会匹配所有 1.x.x 的包，包括 1.3.0，但是不包括 2.0.0。"),v("br"),e._v(" "),v("code",[e._v("*")]),e._v(" 安装最新版本的依赖包，比如 *1.2.3 会匹配 x.x.x，")]),e._v(" "),v("p",[e._v("如果完全希望项目依赖包版本固定，可以将所有依赖版本都写死，如 x.x.x。但及时这样，也无法固定依赖包中所依赖的包的版本，所以此时就需要"),v("code",[e._v("package.lock.json")]),e._v("来对整个依赖树进行版本固定的（锁死）")]),e._v(" "),v("p",[e._v("当我们在一个项目中"),v("code",[e._v("npm install")]),e._v("时候，会自动生成一个"),v("code",[e._v("package-lock.json")]),e._v("文件，和"),v("code",[e._v("package.json")]),e._v("在同一级目录下。"),v("code",[e._v("package-lock.json")]),e._v("记录了项目的一些信息和所依赖的模块。这样在每次安装都会出现相同的结果. 不管你在什么机器上面或什么时候安装。\n当我们下次再"),v("code",[e._v("npm install")]),e._v("时候，npm 发现如果项目中有"),v("code",[e._v("package-lock.json")]),e._v("文件，会根据"),v("code",[e._v("package-lock.json")]),e._v("里的内容来处理和安装依赖而不再根据"),v("code",[e._v("package.json")]),e._v("。")])])}),[],!1,null,null,null);v.default=a.exports}}]);